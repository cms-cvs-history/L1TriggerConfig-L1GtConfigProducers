//

es_module l1GtFactors = L1GtFactorsTrivialProducer {

    // prescale factors
    vint32 PrescaleFactors = {
        1000,    1000,       1,       1,       1,       1,       1,   10000,    1000,     100,
           1,       1,       1,       1,   10000,    1000,     100,     100,       1,       1,
           1,       1,       1,   10000,       1,     100,       1,       1,       1,       1,
           1,       1,       1,    1000,       1,       1,       1,       1,       1,       1,
           1,       1,       1,   10000,       1,       1,       1,       1,       1,       1,
           1,    1000,     100,     100,       1,       1,       1,       1,      20,       1,
           1,       1,       1,       1,      20,       1,       1,       1,       1,       1,
           1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
           1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
           1,       1,       1,       1,       1,       1,       1,       1,   10000,       1,
           1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
           1,       1,       1,       1, 3000000, 3000000,       1,       1,       1,       1,
           1,       1,       1,       1,       1,       1,       1,       1
    }
       
    // trigger mask: block the corresponding algorithm if bit value is 1
    vuint32 TriggerMask = { 
           0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     1,     1,     0,     1,     0,     0,     0,     0,     1,
           1,     1,     1,     0,     1,     0,     0,     1,     1,     0,
           0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     1,     0,     0,     0,     0,     0,     0,
           1,     0,     0,     0,     0,     0,     0,     0,     0,     0,
           1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
           1,     1,     1,     1,     1,     0,     0,     1,     0,     1,
           1,     1,     1,     1,     1,     1,     1,     1,     0,     0,
           0,     0,     0,     1,     1,     1,     0,     1,     1,     1,
           1,     1,     1,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0
    }

}



